[{"C:\\projects\\2020-12-09 Build a Weather App in React JS\\weather-app\\src\\App.js":"1","C:\\projects\\2020-12-09 Build a Weather App in React JS\\weather-app\\src\\reportWebVitals.js":"2","C:\\projects\\2020-12-09 Build a Weather App in React JS\\weather-app\\src\\index.js":"3"},{"size":2739,"mtime":1607742814115,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1607560398732,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1607560398732,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"15c5s9v",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\2020-12-09 Build a Weather App in React JS\\weather-app\\src\\App.js",["15","16","17","18","19"],"import React, { useState, useEffect } from 'react';\nimport './index.css'\n\nimport flagBrazil from './assets/img/flag-brazil.png';\nimport flagUSA from './assets/img/flag-united-states.png';\nimport flagItaly from './assets/img/flag-italy.png';\nimport flagJapan from './assets/img/flag-japan.png';\n\nconst api = {\n  key: \"4e26469eb587d0e30e0d80f1415e8b14\",\n  base: \"http://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() {\n  const [weather, setWeather] = useState({});\n\n  useEffect(() => {\n    changeCity(\"New York\")  \n  }, []);\n\n  function changeCity(city){\n    console.log(city);\n      fetch(`${api.base}weather?q=${city}&units=metric&id=524901&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);  \n          console.log(result);\n        })\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  \n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? (`${weather.name.replace(\" \", \"-\").replace(\"ã\", \"a\").toLowerCase()}-${weather.weather[0].main.toLowerCase()} ${weather.weather[0].icon.slice(weather.weather[0].icon.length - 1)} app`) : 'app'}>\n      <div className=\"gradient-background\">\n        <div className=\"weather-wrapper\">\n        <button className=\"btn-city\" onClick={() => changeCity(\"New York\")}>\n          <img src={flagUSA}/>\n          New York\n        </button>\n        <button className=\"btn-city\" onClick={() => changeCity(\"São Paulo\")}>\n          <img src={flagBrazil}/>\n          São Paulo\n        </button>\n        <button className=\"btn-city\" onClick={() => changeCity(\"Rome\")}>\n          <img src={flagItaly}/>\n          Rome\n        </button>\n        <button className=\"btn-city\" onClick={() => changeCity(\"Tokyo\")}>\n          <img src={flagJapan}/>\n          Tokyo\n        </button>\n\n        {(typeof weather.main != \"undefined\") ? (\n          <div className=\"weather-container\">\n            <p className=\"date\">{dateBuilder(new Date())}</p>\n            <p className=\"city-name\">{weather.name}</p>\n            <p className=\"degrees\">{Math.round(weather.main.temp)}ºC</p>\n            <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />\n            <p className=\"weather-name\">{weather.weather[0].main}</p>\n          </div>\n        ) : ('')}\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\n\nexport default App;\n","C:\\projects\\2020-12-09 Build a Weather App in React JS\\weather-app\\src\\reportWebVitals.js",[],"C:\\projects\\2020-12-09 Build a Weather App in React JS\\weather-app\\src\\index.js",[],{"ruleId":"20","severity":1,"message":"21","line":48,"column":11,"nodeType":"22","endLine":48,"endColumn":31},{"ruleId":"20","severity":1,"message":"21","line":52,"column":11,"nodeType":"22","endLine":52,"endColumn":34},{"ruleId":"20","severity":1,"message":"21","line":56,"column":11,"nodeType":"22","endLine":56,"endColumn":33},{"ruleId":"20","severity":1,"message":"21","line":60,"column":11,"nodeType":"22","endLine":60,"endColumn":33},{"ruleId":"20","severity":1,"message":"21","line":69,"column":13,"nodeType":"22","endLine":69,"endColumn":95},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]